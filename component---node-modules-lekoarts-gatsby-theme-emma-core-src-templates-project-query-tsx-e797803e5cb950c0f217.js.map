{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-project-query-tsx-e797803e5cb950c0f217.js","mappings":"+OAgCA,EAxBwB,SAAC,GAAD,IAAGA,EAAH,OAASC,EAAT,iBACtB,cACEC,GAAI,CACFC,cADE,SAEF,uBAAwB,CACtBC,GAAI,GAENC,GAAI,KAGN,eACEH,GAAI,CACFI,cADE,YAEFC,MAFE,UAGFC,cAHE,QAIFC,WAAW,aAdjB,IAmBE,eAAKP,GAAI,CAAEQ,SAAU,IApBD,KCYxB,EARoB,SAAC,GAAD,IAAGC,EAAH,iBAClB,cAAMT,GAAI,CAAEU,GAAF,EAASP,GAAI,CAAC,EAAd,GAAqBQ,SAAS,UACtC,WAAMb,KAAN,SAAoBC,QAASU,EAAQG,UACrC,WAAMd,KAAN,OAAkBC,QAASU,EAAQI,QACnC,WAAMf,KAAN,UAAqBC,QAASU,EAAQK,YCyE1C,EAvDgB,SAAC,GAAyC,IAA/BL,EAA8B,EAAtCM,KAAQN,QACnBO,GAAaC,EAAAA,EAAAA,WAAU,CAC3BC,OAAQA,EAAAA,OAAAA,KACRC,KAAM,CAAEC,QAAF,EAAcC,UAAU,4BAC9BC,GAAI,CAAEF,QAAF,EAAcC,UAAU,0BAExBE,GAAYN,EAAAA,EAAAA,WAAU,CAAEC,OAAQA,EAAAA,OAAAA,KAAaM,MAAvB,IAAmCL,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAC9FK,GAAeR,EAAAA,EAAAA,WAAU,CAAEC,OAAQA,EAAAA,OAAAA,KAAaM,MAAvB,IAAoCL,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAExG,OACE,kBACE,aACEM,MAAOjB,EADT,MAEEkB,YAAalB,EAFf,QAGEmB,SAAUnB,EAHZ,KAIEoB,MAAOpB,EAAAA,MAAAA,gBAAAA,OAAsCqB,MAE7C,gBAAMhC,KAAN,iBAA4BiC,MAAM,YAClC,gBAAMjC,KAAN,iBAA4BiC,MAAM,UAClC,gBAAMjC,KAAN,gBAA2BiC,MAAOtB,EAAQG,UAC1C,gBAAMd,KAAN,gBAA2BiC,MAAOtB,EAAQI,SAE5C,aAAMgB,MAAOpB,EAAAA,MAAAA,gBAAb,gBAA4DJ,MAAOI,EAAQJ,QACzE,cACEL,GAAI,CACFgC,SADE,WAEFC,OAFE,EAGFC,KAHE,EAIFC,MAJE,EAKFC,SALE,MAMFC,OANE,SAOFC,QAPE,EAQFC,OARE,EASFtC,cAAc,YAGhB,QAAC,EAAAuC,SAAA,IAAD,CAAcC,MAAOzB,IACnB,cAAS0B,GAAT,KAAiBC,QAAQ,aACtBlC,EAfP,SAkBE,QAAC,EAAA+B,SAAA,IAAD,CAAcC,MAAOlB,IACnB,WAAad,QAASA,QAI5B,mBACE,QAAC,EAAA+B,SAAA,IAAD,CAAcC,MAAOhB,IACnB,2BAAchB,EAvCtB,UCxCF,MCQe,SAAyB,GAAsB,IAAjBmC,EAAgB,oBAC3D,OAAO,kBAAP","sources":["webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma/src/components/project-info-item.tsx","webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma/src/components/project-info.tsx","webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma/src/components/project.tsx","webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/project-query.tsx","webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/project.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { Flex, jsx } from \"theme-ui\"\n\ntype ProjectInfoItemProps = {\n  name: string\n  content: string\n}\n\nconst ProjectInfoItem = ({ name, content }: ProjectInfoItemProps) => (\n  <Flex\n    sx={{\n      flexDirection: `column`,\n      \"&:not(:last-of-type)\": {\n        mr: 5,\n      },\n      mb: 2,\n    }}\n  >\n    <div\n      sx={{\n        textTransform: `uppercase`,\n        color: `primary`,\n        letterSpacing: `wider`,\n        fontWeight: `semibold`,\n      }}\n    >\n      {name}\n    </div>\n    <div sx={{ fontSize: 2 }}>{content}</div>\n  </Flex>\n)\n\nexport default ProjectInfoItem\n","/** @jsx jsx */\nimport { Flex, jsx } from \"theme-ui\"\nimport Item from \"./project-info-item\"\n\ntype ProjectInfoProps = {\n  project: {\n    client: string\n    date: string\n    service: string\n  }\n}\n\nconst ProjectInfo = ({ project }: ProjectInfoProps) => (\n  <Flex sx={{ mt: 4, mb: [2, 4], flexWrap: `wrap` }}>\n    <Item name=\"Client\" content={project.client} />\n    <Item name=\"Date\" content={project.date} />\n    <Item name=\"Service\" content={project.service} />\n  </Flex>\n)\n\nexport default ProjectInfo\n","/** @jsx jsx */\nimport { animated, useSpring, config } from \"react-spring\"\nimport { Container, jsx, Flex, Heading } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Hero from \"./hero\"\nimport ProjectInfo from \"./project-info\"\n\ntype ProjectProps = {\n  data: {\n    project: {\n      body: string\n      excerpt: string\n      client: string\n      color: string\n      date: string\n      service: string\n      slug: string\n      title: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n  [key: string]: any\n}\n\nconst Project = ({ data: { project } }: ProjectProps) => {\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <SEO\n        title={project.title}\n        description={project.excerpt}\n        pathname={project.slug}\n        image={project.cover.childImageSharp.resize!.src}\n      >\n        <meta name=\"twitter:label1\" value=\"Client\" />\n        <meta name=\"twitter:label2\" value=\"Date\" />\n        <meta name=\"twitter:data1\" value={project.client} />\n        <meta name=\"twitter:data2\" value={project.date} />\n      </SEO>\n      <Hero image={project.cover.childImageSharp.gatsbyImageData} color={project.color}>\n        <Flex\n          sx={{\n            position: `absolute`,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            maxWidth: `5xl`,\n            margin: `0 auto`,\n            padding: 4,\n            zIndex: 2,\n            flexDirection: `column`,\n          }}\n        >\n          <animated.div style={titleProps}>\n            <Heading as=\"h1\" variant=\"styles.h1\">\n              {project.title}\n            </Heading>\n          </animated.div>\n          <animated.div style={infoProps}>\n            <ProjectInfo project={project} />\n          </animated.div>\n        </Flex>\n      </Hero>\n      <Container>\n        <animated.div style={contentProps}>\n          <MDXRenderer>{project.body}</MDXRenderer>\n        </animated.div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Project\n","import { graphql } from \"gatsby\"\nimport ProjectComponent from \"../components/project\"\n\nexport default ProjectComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    project(slug: { eq: $slug }) {\n      body\n      excerpt\n      client\n      color\n      date(formatString: $formatString)\n      service\n      slug\n      title\n      cover {\n        childImageSharp {\n          gatsbyImageData(quality: 90, layout: FULL_WIDTH)\n          resize(width: 800) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Project from \"../../../components/project\"\n\ntype Props = {\n  data: {\n    project: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function EmmaCoreProject({ ...props }: Props) {\n  return <Project {...props} />\n}\n"],"names":["name","content","sx","flexDirection","mr","mb","textTransform","color","letterSpacing","fontWeight","fontSize","project","mt","flexWrap","client","date","service","data","titleProps","useSpring","config","from","opacity","transform","to","infoProps","delay","contentProps","title","description","pathname","image","src","value","position","bottom","left","right","maxWidth","margin","padding","zIndex","animated","style","as","variant","props"],"sourceRoot":""}