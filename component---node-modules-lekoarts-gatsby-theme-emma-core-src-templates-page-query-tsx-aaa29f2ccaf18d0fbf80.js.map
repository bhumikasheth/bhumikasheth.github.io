{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-page-query-tsx-aaa29f2ccaf18d0fbf80.js","mappings":"gPAmEA,EAzCa,SAAC,GAAmC,IAAzBA,EAAwB,EAAhCC,KAAQD,KAChBE,GAAaC,EAAAA,EAAAA,WAAU,CAC3BC,OAAQA,EAAAA,OAAAA,KACRC,KAAM,CAAEC,QAAF,EAAcC,UAAU,4BAC9BC,GAAI,CAAEF,QAAF,EAAcC,UAAU,0BAExBE,GAAeN,EAAAA,EAAAA,WAAU,CAAEC,OAAQA,EAAAA,OAAAA,KAAaM,MAAvB,IAAoCL,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAExG,OACE,kBACE,aAAKK,MAAOX,EAAZ,MAAwBY,YAAaZ,EAArC,QAAmDa,SAAUb,EAAKc,QAClE,aAAMC,MAAOf,EAAAA,MAAAA,gBAAb,gBAAyDgB,MAAI,IAC3D,cACEC,GAAI,CACFC,SADE,WAEFC,OAFE,EAGFC,KAHE,EAIFC,MAJE,EAKFC,SALE,MAMFC,OANE,SAOFC,QAPE,EAQFC,OARE,EASFC,cAAc,YAGhB,QAAC,EAAAC,SAAA,IAAD,CAAcC,MAAO1B,IACnB,cAAS2B,GAAT,KAAiBC,QAAQ,aACtB9B,EAlBX,WAuBE,mBACE,QAAC,EAAA2B,SAAA,IAAD,CAAcC,MAAOnB,IACnB,2BAAcT,EA1BtB,UC/BF,MCQe,SAAsB,GAAsB,IAAjB+B,EAAgB,oBACxD,OAAO,kBAAP","sources":["webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma/src/components/page.tsx","webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/page-query.tsx","webpack://bhumikasheth/./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/page.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { animated, useSpring, config } from \"react-spring\"\nimport { Container, jsx, Flex, Heading } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Hero from \"./hero\"\n\ntype PageProps = {\n  data: {\n    page: {\n      title: string\n      slug: string\n      excerpt: string\n      body: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n        }\n      }\n    }\n  }\n  [key: string]: any\n}\n\nconst Page = ({ data: { page } }: PageProps) => {\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <SEO title={page.title} description={page.excerpt} pathname={page.slug} />\n      <Hero image={page.cover.childImageSharp.gatsbyImageData} slim>\n        <Flex\n          sx={{\n            position: `absolute`,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            maxWidth: `5xl`,\n            margin: `0 auto`,\n            padding: 4,\n            zIndex: 2,\n            flexDirection: `column`,\n          }}\n        >\n          <animated.div style={titleProps}>\n            <Heading as=\"h1\" variant=\"styles.h1\">\n              {page.title}\n            </Heading>\n          </animated.div>\n        </Flex>\n      </Hero>\n      <Container>\n        <animated.div style={contentProps}>\n          <MDXRenderer>{page.body}</MDXRenderer>\n        </animated.div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Page\n","import { graphql } from \"gatsby\"\nimport PageComponent from \"../components/page\"\n\nexport default PageComponent\n\nexport const query = graphql`\n  query ($slug: String!) {\n    page(slug: { eq: $slug }) {\n      title\n      slug\n      excerpt\n      body\n      cover {\n        childImageSharp {\n          gatsbyImageData(quality: 90, layout: FULL_WIDTH)\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Page from \"../../../components/page\"\n\ntype Props = {\n  data: {\n    page: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function EmmaCorePage({ ...props }: Props) {\n  return <Page {...props} />\n}\n"],"names":["page","data","titleProps","useSpring","config","from","opacity","transform","to","contentProps","delay","title","description","pathname","slug","image","slim","sx","position","bottom","left","right","maxWidth","margin","padding","zIndex","flexDirection","animated","style","as","variant","props"],"sourceRoot":""}